PID IS 26954
PIDFILE is 
=> Connector API keys loaded.
=> Resque options loaded. redis host is: localhost:6379
 WARNING: IMAGEMAGICK_PATH WAS NOT SET, USING /usr/local/bin, MAKE SURE THIS MATCHES YOUR ENVIRONMENT
=> ZangZing Initializer
      Task started at             : Fri Nov 18 03:45:20 +0200 2011
      Tempfile Directory          : /var/folders/h_/yp7_03351656fd4s1nw30tvr0000gn/T
      Command Path                : /usr/local/bin
      Path                        : /Library/Ruby/Gems/1.8/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin:/Users/olego/.rvm/bin
      Resque_CPU_hosts            : localhost
      Redis_host                  : localhost
      Memcached hosts             : localhost:11211
      Deployment information from : Default Values in environment.rb
      Rails environment           : development
      Host                        : localhost
      Album Email Host            : mauricio-post.zangzing.com
      Source Version (from git)   : UNKNOWN
                                 root        /(.:format)                                                                 {:controller=>"pages", :action=>"home"}
                                 beta GET    /beta(.:format)                                                             {:controller=>"pages", :action=>"home"}
                              service GET    /service(.:format)                                                          {:controller=>"pages", :action=>"home"}
                               signin GET    /signin(.:format)                                                           {:controller=>"user_sessions", :action=>"new"}
                                 join GET    /join(.:format)                                                             {:controller=>"users", :action=>"join"}
                          unsubscribe GET    /unsubscribe/:id(.:format)                                                  {:controller=>"subscriptions", :action=>"unsubscribe"}
                          bench_tests GET    /service/bench_test(.:format)                                               {:controller=>"bench_test/bench_tests", :action=>"showtests"}
             bench_test_resque_no_ops GET    /service/bench_test/resque_no_ops(.:format)                                 {:controller=>"bench_test/resque_no_ops", :action=>"index"}
                                      POST   /service/bench_test/resque_no_ops(.:format)                                 {:controller=>"bench_test/resque_no_ops", :action=>"create"}
          new_bench_test_resque_no_op GET    /service/bench_test/resque_no_ops/new(.:format)                             {:controller=>"bench_test/resque_no_ops", :action=>"new"}
         edit_bench_test_resque_no_op GET    /service/bench_test/resque_no_ops/:id/edit(.:format)                        {:controller=>"bench_test/resque_no_ops", :action=>"edit"}
              bench_test_resque_no_op GET    /service/bench_test/resque_no_ops/:id(.:format)                             {:controller=>"bench_test/resque_no_ops", :action=>"show"}
                                      PUT    /service/bench_test/resque_no_ops/:id(.:format)                             {:controller=>"bench_test/resque_no_ops", :action=>"update"}
                                      DELETE /service/bench_test/resque_no_ops/:id(.:format)                             {:controller=>"bench_test/resque_no_ops", :action=>"destroy"}
                       bench_test_s3s GET    /service/bench_test/s3s(.:format)                                           {:controller=>"bench_test/s3s", :action=>"index"}
                                      POST   /service/bench_test/s3s(.:format)                                           {:controller=>"bench_test/s3s", :action=>"create"}
                    new_bench_test_s3 GET    /service/bench_test/s3s/new(.:format)                                       {:controller=>"bench_test/s3s", :action=>"new"}
                   edit_bench_test_s3 GET    /service/bench_test/s3s/:id/edit(.:format)                                  {:controller=>"bench_test/s3s", :action=>"edit"}
                        bench_test_s3 GET    /service/bench_test/s3s/:id(.:format)                                       {:controller=>"bench_test/s3s", :action=>"show"}
                                      PUT    /service/bench_test/s3s/:id(.:format)                                       {:controller=>"bench_test/s3s", :action=>"update"}
                                      DELETE /service/bench_test/s3s/:id(.:format)                                       {:controller=>"bench_test/s3s", :action=>"destroy"}
                bench_test_photo_gens GET    /service/bench_test/photo_gens(.:format)                                    {:controller=>"bench_test/photo_gens", :action=>"index"}
                                      POST   /service/bench_test/photo_gens(.:format)                                    {:controller=>"bench_test/photo_gens", :action=>"create"}
             new_bench_test_photo_gen GET    /service/bench_test/photo_gens/new(.:format)                                {:controller=>"bench_test/photo_gens", :action=>"new"}
            edit_bench_test_photo_gen GET    /service/bench_test/photo_gens/:id/edit(.:format)                           {:controller=>"bench_test/photo_gens", :action=>"edit"}
                 bench_test_photo_gen GET    /service/bench_test/photo_gens/:id(.:format)                                {:controller=>"bench_test/photo_gens", :action=>"show"}
                                      PUT    /service/bench_test/photo_gens/:id(.:format)                                {:controller=>"bench_test/photo_gens", :action=>"update"}
                                      DELETE /service/bench_test/photo_gens/:id(.:format)                                {:controller=>"bench_test/photo_gens", :action=>"destroy"}
                         health_check GET    /service/health_check(.:format)                                             {:controller=>"pages", :action=>"health_check"}
                             new_user GET    /service/users/new(.:format)                                                {:controller=>"users", :action=>"new"}
                       validate_email GET    /service/users/validate_email(.:format)                                     {:controller=>"users", :action=>"validate_email"}
                    validate_username GET    /service/users/validate_username(.:format)                                  {:controller=>"users", :action=>"validate_username"}
                          create_user POST   /service/users(.:format)                                                    {:controller=>"users", :action=>"create"}
                          update_user PUT    /service/users/:id(.:format)                                                {:controller=>"users", :action=>"update"}
                          delete_user DELETE /service/users/:id(.:format)                                                {:controller=>"users", :action=>"destroy"}
                 update_user_password        /service/users/:id/update_password(.:format)                                {:controller=>"users", :action=>"update_password"}
                 subscriptions_mcsync        /service/subscriptions/mcsync(.:format)                                     {:controller=>"subscriptions", :action=>"mcsync"}
                                      GET    /service/subscriptions/:id(.:format)                                        {:controller=>"subscriptions", :action=>"unsubscribe"}
                 update_subscriptions PUT    /service/subscriptions/:id(.:format)                                        {:controller=>"subscriptions", :action=>"update"}
                       my_albums_json GET    /service/users/:user_id/my_albums_json(.:format)                            {:controller=>"albums", :action=>"my_albums_json"}
                my_albums_public_json GET    /service/users/:user_id/my_albums_public_json(.:format)                     {:controller=>"albums", :action=>"my_albums_public_json"}
                    liked_albums_json GET    /service/users/:user_id/liked_albums_json(.:format)                         {:controller=>"albums", :action=>"liked_albums_json"}
             liked_albums_public_json GET    /service/users/:user_id/liked_albums_public_json(.:format)                  {:controller=>"albums", :action=>"liked_albums_public_json"}
       liked_users_public_albums_json GET    /service/users/:user_id/liked_users_public_albums_json(.:format)            {:controller=>"albums", :action=>"liked_users_public_albums_json"}
                  invited_albums_json GET    /service/users/:user_id/invited_albums_json(.:format)                       {:controller=>"albums", :action=>"invited_albums_json"}
                                      GET    /service/users/:user_id/albums(.:format)                                    {:controller=>"albums", :action=>"index"}
          invalidate_user_album_cache PUT    /service/users/:user_id/invalidate_cache(.:format)                          {:controller=>"albums", :action=>"invalidate_cache"}
                       new_user_album GET    /service/users/:user_id/albums/new(.:format)                                {:controller=>"albums", :action=>"new"}
                    create_user_album POST   /service/users/:user_id/albums(.:format)                                    {:controller=>"albums", :action=>"create"}
                           name_album GET    /service/albums/:id/name_album(.:format)                                    {:controller=>"albums", :action=>"name_album"}
                  preview_album_email GET    /service/albums/:id/preview_album_email(.:format)                           {:controller=>"albums", :action=>"preview_album_email"}
                              privacy GET    /service/albums/:id/privacy(.:format)                                       {:controller=>"albums", :action=>"privacy"}
                       download_album GET    /service/albums/:id/download(.:format)                                      {:controller=>"albums", :action=>"download"}
                          close_batch GET    /service/albums/:id/close_batch(.:format)                                   {:controller=>"albums", :action=>"close_batch"}
                         update_album PUT    /service/albums/:id(.:format)                                               {:controller=>"albums", :action=>"update"}
                         delete_album DELETE /service/albums/:id(.:format)                                               {:controller=>"albums", :action=>"destroy"}
                 request_album_access POST   /service/albums/:id/request_access(.:format)                                {:controller=>"albums", :action=>"request_access"}
                                      GET    /service/albums/:id/edit_group(.:format)                                    {:controller=>"albums", :action=>"edit_group"}
                                      POST   /service/albums/:id/add_group_members(.:format)                             {:controller=>"albums", :action=>"add_group_members"}
                                      PUT    /service/albums/:id/update_group_member(.:format)                           {:controller=>"albums", :action=>"update_group_member"}
                                      DELETE /service/albums/:id/delete_group_member(.:format)                           {:controller=>"albums", :action=>"delete_group_member"}
                                      GET    /service/albums/:id/group_members(.:format)                                 {:controller=>"albums", :action=>"group_members"}
                         album_shares GET    /service/albums/:album_id/shares(.:format)                                  {:controller=>"shares", :action=>"index"}
                           shares_new GET    /service/shares/new(.:format)                                               {:controller=>"shares", :action=>"new"}
                       shares_newpost GET    /service/shares/newpost(.:format)                                           {:controller=>"shares", :action=>"newpost"}
                      shares_newemail GET    /service/shares/newemail(.:format)                                          {:controller=>"shares", :action=>"newemail"}
                   create_album_share POST   /service/albums/:album_id/shares(.:format)                                  {:controller=>"shares", :action=>"create"}
                   create_photo_share POST   /service/photos/:photo_id/shares(.:format)                                  {:controller=>"shares", :action=>"create"}
                                share GET    /service/shares/:id(.:format)                                               {:controller=>"shares", :action=>"show"}
                           edit_share GET    /service/shares/:id/edit(.:format)                                          {:controller=>"shares", :action=>"edit"}
                         update_share PUT    /service/shares/:id(.:format)                                               {:controller=>"shares", :action=>"update"}
                         delete_share DELETE /service/shares/:id(.:format)                                               {:controller=>"shares", :action=>"destroy"}
                                      GET    /service/albums/:album_id/new_twitter_share(.:format)                       {:controller=>"shares", :action=>"new_twitter_share"}
                                      GET    /service/albums/:album_id/new_facebook_share(.:format)                      {:controller=>"shares", :action=>"new_facebook_share"}
                                      GET    /service/albums/:album_id/new_mailto_share(.:format)                        {:controller=>"shares", :action=>"new_mailto_share"}
                                      GET    /service/photos/:photo_id/new_twitter_share(.:format)                       {:controller=>"shares", :action=>"new_twitter_share"}
                                      GET    /service/photos/:photo_id/new_facebook_share(.:format)                      {:controller=>"shares", :action=>"new_facebook_share"}
                                      GET    /service/photos/:photo_id/new_mailto_share(.:format)                        {:controller=>"shares", :action=>"new_mailto_share"}
                    album_photos_json GET    /service/albums/:album_id/photos_json(.:format)                             {:controller=>"photos", :action=>"photos_json"}
         album_invalidate_photos_json PUT    /service/albums/:album_id/photos_json_invalidate(.:format)                  {:controller=>"photos", :action=>"photos_json_invalidate"}
                                album GET    /service/albums/:album_id/photos(.:format)                                  {:controller=>"photos", :action=>"index"}
                          album_movie GET    /service/albums/:album_id/movie(.:format)                                   {:controller=>"photos", :action=>"movie"}
                        destroy_photo DELETE /service/photos/:id(.:format)                                               {:controller=>"photos", :action=>"destroy"}
                    upload_photo_fast PUT    /service/photos/:id/upload_fast(.:format)                                   {:controller=>"photos", :action=>"upload_fast"}
             simple_upload_photo_fast PUT    /service/albums/:album_id/upload_fast(.:format)                             {:controller=>"photos", :action=>"simple_upload_fast"}
                         agent_photos GET    /service/agents/:agent_id/photos(.:format)                                  {:controller=>"photos", :action=>"agent_index"}
                         agent_create POST   /service/albums/:album_id/photos/agent_create.:format                       {:controller=>"photos", :action=>"agent_create"}
                       download_photo GET    /service/photos/download/:id(.:format)                                      {:controller=>"photos", :action=>"download"}
                         update_photo PUT    /service/photos/:id(.:format)                                               {:controller=>"photos", :action=>"update"}
                       photo_position PUT    /service/photos/:id/position(.:format)                                      {:controller=>"photos", :action=>"position"}
                     photo_async_edit PUT    /service/photos/:id/async_edit(.:format)                                    {:controller=>"photos", :action=>"async_edit"}
              photo_async_rotate_left PUT    /service/photos/:id/async_rotate_left(.:format)                             {:controller=>"photos", :action=>"async_rotate_left"}
             photo_async_rotate_right PUT    /service/photos/:id/async_rotate_right(.:format)                            {:controller=>"photos", :action=>"async_rotate_right"}
                       photo_comments GET    /service/photos/:photo_id/comments(.:format)                                {:controller=>"comments", :action=>"index"}
       album_photos_comments_metadata GET    /service/albums/:album_id/photos/comments/metadata(.:format)                {:controller=>"comments", :action=>"metadata_for_album_photos"}
       comments_metadata_for_subjects        /service/comments/metadata_for_subjects(.:format)                           {:controller=>"comments", :action=>"metadata_for_subjects"}
                 create_photo_comment POST   /service/photos/:photo_id/comments(.:format)                                {:controller=>"comments", :action=>"create"}
                      destroy_comment DELETE /service/comments/:comment_id(.:format)                                     {:controller=>"comments", :action=>"destroy"}
          finish_create_photo_comment GET    /service/photos/:photo_id/comments/finish_create(.:format)                  {:controller=>"comments", :action=>"finish_create"}
                     album_activities GET    /service/albums/:album_id/activities(.:format)                              {:controller=>"activities", :action=>"album_index"}
                                      GET    /service/users/:user_id/activities(.:format)                                {:controller=>"activities", :action=>"user_index"}
                         album_people GET    /service/albums/:album_id/people(.:format)                                  {:controller=>"people", :action=>"album_index"}
                                      GET    /service/users/:user_id/people(.:format)                                    {:controller=>"people", :action=>"user_index"}
                                likes        /service/likes(.:format)                                                    {:controller=>"likes", :action=>"index"}
                                 like POST   /service/likes/:subject_id(.:format)                                        {:controller=>"likes", :action=>"create"}
                            like_user GET    /service/users/:user_id/like(.:format)                                      {:controller=>"likes", :action=>"like"}
                           like_album GET    /service/albums/:album_id/like(.:format)                                    {:controller=>"likes", :action=>"like"}
                           like_photo GET    /service/photos/:photo_id/like(.:format)                                    {:controller=>"likes", :action=>"like"}
                          delete_like DELETE /service/likes/:subject_id(.:format)                                        {:controller=>"likes", :action=>"destroy"}
                            post_like POST   /service/likes/:subject_id/post(.:format)                                   {:controller=>"likes", :action=>"post"}
                        user_contacts GET    /service/users/:user_id/contacts(.:format)                                  {:controller=>"contacts", :action=>"index"}
                            authorize        /service/oauth/authorize(.:format)                                          {:controller=>"oauth", :action=>"authorize"}
                       agentauthorize        /service/oauth/agentauthorize(.:format)                                     {:controller=>"oauth", :action=>"agentauthorize"}
                               revoke        /service/oauth/revoke(.:format)                                             {:controller=>"oauth", :action=>"revoke"}
                        request_token        /service/oauth/request_token(.:format)                                      {:controller=>"oauth", :action=>"request_token"}
                         access_token        /service/oauth/access_token(.:format)                                       {:controller=>"oauth", :action=>"access_token"}
                         test_request        /service/oauth/test_request(.:format)                                       {:controller=>"oauth", :action=>"test_request"}
                         test_session        /service/oauth/test_session(.:format)                                       {:controller=>"oauth", :action=>"test_session"}
                     new_user_session GET    /service/user_sessions/new(.:format)                                        {:controller=>"user_sessions", :action=>"new"}
                  create_user_session POST   /service/user_sessions/create(.:format)                                     {:controller=>"user_sessions", :action=>"create"}
                                             /service/signin(.:format)                                                   {:controller=>"user_sessions", :action=>"new"}
                             inactive        /service/inactive(.:format)                                                 {:controller=>"user_sessions", :action=>"inactive"}
                              signout        /service/signout(.:format)                                                  {:controller=>"user_sessions", :action=>"destroy"}
                   new_password_reset        /service/password_resets/new(.:format)                                      {:controller=>"password_resets", :action=>"new"}
                  edit_password_reset GET    /service/password_resets/:id/edit(.:format)                                 {:controller=>"password_resets", :action=>"edit"}
                create_password_reset POST   /service/password_resets/create(.:format)                                   {:controller=>"password_resets", :action=>"create"}
                update_password_reset PUT    /service/password_resets/:id/update(.:format)                               {:controller=>"password_resets", :action=>"update"}
                       async_response        /service/async_responses/:response_id(.:format)                             {:controller=>"async_responses", :action=>"show"}
                   new_flickr_session        /service/flickr/sessions/new(.:format)                                      {:controller=>"connector/flickr_sessions", :action=>"new"}
                create_flickr_session        /service/flickr/sessions/create(.:format)                                   {:controller=>"connector/flickr_sessions", :action=>"create"}
               destroy_flickr_session        /service/flickr/sessions/destroy(.:format)                                  {:controller=>"connector/flickr_sessions", :action=>"destroy"}
                        flickr_photos        /service/flickr/folders/:set_id/photos.:format                              {:controller=>"connector/flickr_photos", :action=>"index"}
                  flickr_photo_action        /service/flickr/folders/:set_id/photos/:photo_id/:action(.:format)          {:controller=>"connector/flickr_photos", :action=>"action"}
                       flickr_folders        /service/flickr/folders.:format                                             {:controller=>"connector/flickr_folders", :action=>"index"}
                 flickr_folder_action        /service/flickr/folders/:set_id/:action.:format                             {:controller=>"connector/flickr_folders", :action=>"index"}
                    flickr_import_all        /service/flickr/folders/import_all.:format                                  {:controller=>"connector/flickr_folders", :action=>"import_all"}
                    new_kodak_session        /service/kodak/sessions/new(.:format)                                       {:controller=>"connector/kodak_sessions", :action=>"new"}
                 create_kodak_session        /service/kodak/sessions/create(.:format)                                    {:controller=>"connector/kodak_sessions", :action=>"create"}
                destroy_kodak_session        /service/kodak/sessions/destroy(.:format)                                   {:controller=>"connector/kodak_sessions", :action=>"destroy"}
                         kodak_photos        /service/kodak/folders/:kodak_album_id/photos.:format                       {:controller=>"connector/kodak_photos", :action=>"index"}
                   kodak_photo_action        /service/kodak/folders/:kodak_album_id/photos/:photo_id/:action(.:format)   {:controller=>"connector/kodak_photos", :action=>"index"}
                        kodak_folders        /service/kodak/folders.:format                                              {:controller=>"connector/kodak_folders", :action=>"index"}
                  kodak_folder_action        /service/kodak/folders/:kodak_album_id/:action.:format                      {:controller=>"connector/kodak_folders", :action=>"index"}
                     kodak_import_all        /service/kodak/folders/import_all.:format                                   {:controller=>"connector/kodak_folders", :action=>"import_all"}
                 new_facebook_session        /service/facebook/sessions/new(.:format)                                    {:controller=>"connector/facebook_sessions", :action=>"new"}
              create_facebook_session        /service/facebook/sessions/create(.:format)                                 {:controller=>"connector/facebook_sessions", :action=>"create"}
             destroy_facebook_session        /service/facebook/sessions/destroy(.:format)                                {:controller=>"connector/facebook_sessions", :action=>"destroy"}
                      facebook_photos        /service/facebook/folders/:fb_album_id/photos.:format                       {:controller=>"connector/facebook_photos", :action=>"index"}
                facebook_photo_action        /service/facebook/folders/:fb_album_id/photos/:photo_id/:action(.:format)   {:controller=>"connector/facebook_photos", :action=>"index"}
                     facebook_folders        /service/facebook/folders.:format                                           {:controller=>"connector/facebook_folders", :action=>"index"}
               facebook_folder_action        /service/facebook/folders/:fb_album_id/:action.:format                      {:controller=>"connector/facebook_folders", :action=>"index"}
                  facebook_import_all        /service/facebook/folders/import_all.:format                                {:controller=>"connector/facebook_folders", :action=>"import_all"}
                  new_smugmug_session        /service/smugmug/sessions/new(.:format)                                     {:controller=>"connector/smugmug_sessions", :action=>"new"}
               create_smugmug_session        /service/smugmug/sessions/create(.:format)                                  {:controller=>"connector/smugmug_sessions", :action=>"create"}
              destroy_smugmug_session        /service/smugmug/sessions/destroy(.:format)                                 {:controller=>"connector/smugmug_sessions", :action=>"destroy"}
                       smugmug_photos        /service/smugmug/folders/:sm_album_id/photos.:format                        {:controller=>"connector/smugmug_photos", :action=>"index"}
                 smugmug_photo_action        /service/smugmug/folders/:sm_album_id/photos/:photo_id/:action(.:format)    {:controller=>"connector/smugmug_photos", :action=>"index"}
                      smugmug_folders        /service/smugmug/folders.:format                                            {:controller=>"connector/smugmug_folders", :action=>"index"}
                smugmug_folder_action        /service/smugmug/folders/:sm_album_id/:action.:format                       {:controller=>"connector/smugmug_folders", :action=>"index"}
                   smugmug_import_all        /service/smugmug/folders/import_all.:format                                 {:controller=>"connector/smugmug_folders", :action=>"import_all"}
               new_shutterfly_session        /service/shutterfly/sessions/new(.:format)                                  {:controller=>"connector/shutterfly_sessions", :action=>"new"}
            create_shutterfly_session        /service/shutterfly/sessions/create(.:format)                               {:controller=>"connector/shutterfly_sessions", :action=>"create"}
           destroy_shutterfly_session        /service/shutterfly/sessions/destroy(.:format)                              {:controller=>"connector/shutterfly_sessions", :action=>"destroy"}
                    shutterfly_photos        /service/shutterfly/folders/:sf_album_id/photos.:format                     {:controller=>"connector/shutterfly_photos", :action=>"index"}
              shutterfly_photo_action        /service/shutterfly/folders/:sf_album_id/photos/:photo_id/:action(.:format) {:controller=>"connector/shutterfly_photos", :action=>"index"}
                   shutterfly_folders        /service/shutterfly/folders.:format                                         {:controller=>"connector/shutterfly_folders", :action=>"index"}
             shutterfly_folder_action        /service/shutterfly/folders/:sf_album_id/:action.:format                    {:controller=>"connector/shutterfly_folders", :action=>"index"}
                shutterfly_import_all        /service/shutterfly/folders/import_all.:format                              {:controller=>"connector/shutterfly_folders", :action=>"import_all"}
                new_instagram_session        /service/instagram/sessions/new(.:format)                                   {:controller=>"connector/instagram_sessions", :action=>"new"}
             create_instagram_session        /service/instagram/sessions/create(.:format)                                {:controller=>"connector/instagram_sessions", :action=>"create"}
            destroy_instagram_session        /service/instagram/sessions/destroy(.:format)                               {:controller=>"connector/instagram_sessions", :action=>"destroy"}
                     instagram_photos        /service/instagram/folders/:target/photos.:format                           {:controller=>"connector/instagram_photos", :action=>"index"}
               instagram_photo_action        /service/instagram/folders/:target/photos/:photo_id/:action(.:format)       {:controller=>"connector/instagram_photos", :action=>"index"}
                    instagram_folders        /service/instagram/folders.:format                                          {:controller=>"connector/instagram_folders", :action=>"index"}
              instagram_folder_action        /service/instagram/folders/:target/:action.:format                          {:controller=>"connector/instagram_folders", :action=>"index"}
                 instagram_import_all        /service/instagram/folders/import_all.:format                               {:controller=>"connector/instagram_folders", :action=>"import_all"}
              new_photobucket_session        /service/photobucket/sessions/new(.:format)                                 {:controller=>"connector/photobucket_sessions", :action=>"new"}
           create_photobucket_session        /service/photobucket/sessions/create(.:format)                              {:controller=>"connector/photobucket_sessions", :action=>"create"}
          destroy_photobucket_session        /service/photobucket/sessions/destroy(.:format)                             {:controller=>"connector/photobucket_sessions", :action=>"destroy"}
                  photobucket_folders        /service/photobucket/folders(.:format)                                      {:controller=>"connector/photobucket_folders", :action=>"index"}
                          photobucket        /service/photobucket/folders/:action(.:format)                              {:controller=>"connector/photobucket_folders"}
               photobucket_import_all        /service/photobucket/folders/import_all.:format                             {:controller=>"connector/photobucket_folders", :action=>"import_all"}
                  new_dropbox_session        /service/dropbox/sessions/new(.:format)                                     {:controller=>"connector/dropbox_sessions", :action=>"new"}
               create_dropbox_session        /service/dropbox/sessions/create(.:format)                                  {:controller=>"connector/dropbox_sessions", :action=>"create"}
              destroy_dropbox_session        /service/dropbox/sessions/destroy(.:format)                                 {:controller=>"connector/dropbox_sessions", :action=>"destroy"}
                      dropbox_folders        /service/dropbox/folders(.:format)                                          {:controller=>"connector/dropbox_folders", :action=>"index"}
                              dropbox        /service/dropbox/folders/:action(.:format)                                  {:controller=>"connector/dropbox_folders"}
                        dropbox_image        /service/dropbox/urls/:root/*path                                           {:controller=>"connector/dropbox_urls", :action=>"serve_image"}
                 new_mobileme_session        /service/mobileme/sessions/new(.:format)                                    {:controller=>"connector/mobileme_sessions", :action=>"new"}
              create_mobileme_session        /service/mobileme/sessions/create(.:format)                                 {:controller=>"connector/mobileme_sessions", :action=>"create"}
             destroy_mobileme_session        /service/mobileme/sessions/destroy(.:format)                                {:controller=>"connector/mobileme_sessions", :action=>"destroy"}
                     mobileme_folders        /service/mobileme/folders.:format                                           {:controller=>"connector/mobileme_folders", :action=>"index"}
                      mobileme_photos        /service/mobileme/folders/:mm_album_id/:action.:format                      {:controller=>"connector/mobileme_folders", :action=>"album_index"}
                  mobileme_import_all        /service/mobileme/folders/import_all.:format                                {:controller=>"connector/mobileme_folders", :action=>"import_all"}
                      zangzing_photos        /service/zangzing/folders/:zz_album_id/photos.:format                       {:controller=>"connector/zangzing_photos", :action=>"index"}
                zangzing_photo_action        /service/zangzing/folders/:zz_album_id/photos/:photo_id/:action(.:format)   {:controller=>"connector/zangzing_photos", :action=>"index"}
                     zangzing_folders        /service/zangzing/folders.:format                                           {:controller=>"connector/zangzing_folders", :action=>"index"}
               zangzing_folder_action        /service/zangzing/folders/:zz_album_id/:action.:format                      {:controller=>"connector/zangzing_folders", :action=>"index"}
                   new_google_session        /service/google/sessions/new(.:format)                                      {:controller=>"connector/google_sessions", :action=>"new"}
                create_google_session        /service/google/sessions/create(.:format)                                   {:controller=>"connector/google_sessions", :action=>"create"}
               destroy_google_session        /service/google/sessions/destroy(.:format)                                  {:controller=>"connector/google_sessions", :action=>"destroy"}
               google_contacts_import        /service/google/contacts/import(.:format)                                   {:controller=>"connector/google_contacts", :action=>"import"}
                        picasa_photos        /service/google/folders/:picasa_album_id/photos.:format                     {:controller=>"connector/picasa_photos", :action=>"index"}
                  picasa_photo_action        /service/google/folders/:picasa_album_id/photos/:photo_id/:action(.:format) {:controller=>"connector/picasa_photos", :action=>"index"}
                       picasa_folders        /service/google/folders.:format                                             {:controller=>"connector/picasa_folders", :action=>"index"}
                 picasa_folder_action        /service/google/folders/:picasa_album_id/:action.:format                    {:controller=>"connector/picasa_folders", :action=>"index"}
                    picasa_import_all        /service/google/folders/import_all.:format                                  {:controller=>"connector/picasa_folders", :action=>"import_all"}
                       local_contacts        /service/local/contacts/import(.:format)                                    {:controller=>"connector/local_contacts", :action=>"import"}
                    new_yahoo_session        /service/yahoo/sessions/new(.:format)                                       {:controller=>"connector/yahoo_sessions", :action=>"new"}
                 create_yahoo_session        /service/yahoo/sessions/create(.:format)                                    {:controller=>"connector/yahoo_sessions", :action=>"create"}
                destroy_yahoo_session        /service/yahoo/sessions/destroy(.:format)                                   {:controller=>"connector/yahoo_sessions", :action=>"destroy"}
                yahoo_contacts_import        /service/yahoo/contacts/import(.:format)                                    {:controller=>"connector/yahoo_contacts", :action=>"import"}
                   new_mslive_session        /service/mslive/sessions/new(.:format)                                      {:controller=>"connector/mslive_sessions", :action=>"new"}
                create_mslive_session        /service/mslive/sessions/create(.:format)                                   {:controller=>"connector/mslive_sessions", :action=>"delauth"}
               destroy_mslive_session        /service/mslive/sessions/destroy(.:format)                                  {:controller=>"connector/mslive_sessions", :action=>"destroy"}
                      mslive_contacts        /service/mslive/contacts/import(.:format)                                   {:controller=>"connector/mslive_contacts", :action=>"import"}
                  new_twitter_session        /service/twitter/sessions/new(.:format)                                     {:controller=>"connector/twitter_sessions", :action=>"new"}
               create_twitter_session        /service/twitter/sessions/create(.:format)                                  {:controller=>"connector/twitter_sessions", :action=>"create"}
              destroy_twitter_session        /service/twitter/sessions/destroy(.:format)                                 {:controller=>"connector/twitter_sessions", :action=>"destroy"}
                                proxy        /service/proxy(.:format)                                                    {:controller=>"connector/proxy", :action=>"proxy"}
                 sendgrid_import_fast        /service/sendgrid/import_fast(.:format)                                     {:controller=>"sendgrid", :action=>"import_fast"}
                 sendgrid_unsubscribe POST   /service/sendgrid/unsubscribe(.:format)                                     {:controller=>"sendgrid", :action=>"un_subscribe"}
                      sendgrid_events POST   /service/sendgrid/events(.:format)                                          {:controller=>"sendgrid", :action=>"events"}
                            moderator GET    /service/moderator(.:format)                                                {:controller=>"moderator/base", :action=>"index"}
             moderator_upload_batches GET    /service/moderator/upload_batches(.:format)                                 {:controller=>"moderator/upload_batches", :action=>"index"}
               moderator_upload_batch GET    /service/moderator/upload_batches/:date(.:format)                           {:controller=>"moderator/upload_batches", :action=>"show"}
        moderator_upload_batch_report GET    /service/moderator/upload_batches/:id/report_abuse(.:format)                {:controller=>"moderator/upload_batches", :action=>"report"}
                                admin GET    /service/admin(.:format)                                                    {:controller=>"admin/admin_screens", :action=>"index"}
                                 logs GET    /service/admin/logs(.:format)                                               {:controller=>"admin/logs", :action=>"index"}
                         log_retrieve GET    /service/admin/logs/:logname(.:format)                                      {:controller=>"admin/logs", :action=>"retrieve"}
                      email_templates GET    /service/admin/email_templates(.:format)                                    {:controller=>"admin/email_templates", :action=>"index"}
                                      POST   /service/admin/email_templates(.:format)                                    {:controller=>"admin/email_templates", :action=>"create"}
                   new_email_template GET    /service/admin/email_templates/new(.:format)                                {:controller=>"admin/email_templates", :action=>"new"}
                  edit_email_template GET    /service/admin/email_templates/:id/edit(.:format)                           {:controller=>"admin/email_templates", :action=>"edit"}
                       email_template GET    /service/admin/email_templates/:id(.:format)                                {:controller=>"admin/email_templates", :action=>"show"}
                                      PUT    /service/admin/email_templates/:id(.:format)                                {:controller=>"admin/email_templates", :action=>"update"}
                                      DELETE /service/admin/email_templates/:id(.:format)                                {:controller=>"admin/email_templates", :action=>"destroy"}
                reload_email_template PUT    /service/admin/email_templates/:id/reload(.:format)                         {:controller=>"admin/email_templates", :action=>"reload"}
                  test_email_template GET    /service/admin/email_templates/:id/test(.:format)                           {:controller=>"admin/email_templates", :action=>"test"}
                               emails GET    /service/admin/emails(.:format)                                             {:controller=>"admin/emails", :action=>"index"}
                                email PUT    /service/admin/emails/:id(.:format)                                         {:controller=>"admin/emails", :action=>"update"}
                      system_settings GET    /service/admin/settings(.:format)                                           {:controller=>"admin/system_settings", :action=>"show"}
                             settings PUT    /service/admin/settings(.:format)                                           {:controller=>"admin/system_settings", :action=>"update"}
                             homepage GET    /service/admin/homepage(.:format)                                           {:controller=>"admin/homepage", :action=>"show"}
                                      PUT    /service/admin/homepage(.:format)                                           {:controller=>"admin/homepage", :action=>"update"}
                               guests GET    /service/admin/guests(.:format)                                             {:controller=>"admin/guests", :action=>"index"}
                                      POST   /service/admin/guests(.:format)                                             {:controller=>"admin/guests", :action=>"create"}
                                guest GET    /service/admin/guests/:id(.:format)                                         {:controller=>"admin/guests", :action=>"show"}
                       activate_guest PUT    /service/admin/guests/:id/activate(.:format)                                {:controller=>"admin/guests", :action=>"activate"}
                                users GET    /service/admin/users(.:format)                                              {:controller=>"admin/users", :action=>"index"}
                  admin_unimpersonate GET    /service/admin/users/unimpersonate(.:format)                                {:controller=>"admin/users", :action=>"unimpersonate"}
                      admin_user_show GET    /service/admin/users/:id(.:format)                                          {:controller=>"admin/users", :action=>"show"}
                  admin_activate_user PUT    /service/admin/users/:id/activate(.:format)                                 {:controller=>"admin/users", :action=>"activate"}
                 admin_reset_password PUT    /service/admin/users/:id/reset_password(.:format)                           {:controller=>"admin/users", :action=>"reset_password"}
                    admin_impersonate PUT    /service/admin/users/:id/impersonate(.:format)                              {:controller=>"admin/users", :action=>"impersonate"}
                         admin_resque        /service/admin/resque                                                       {:to=>#<Sinatra::ShowExceptions:0x1068e6d98 @template=#<ERB:0x1068e6d48 @safe_level=nil, @filename=nil, @src="_erbout = ''; _erbout.concat \"<!DOCTYPE html>\\n<html>\\n<head>\\n  <meta http-equiv=\\\"Content-Type\\\" content=\\\"text/html; charset=utf-8\\\"/>\\n  <title>\"\n\n\n\n; _erbout.concat((h exception.class ).to_s); _erbout.concat \" at \"; _erbout.concat((h path ).to_s); _erbout.concat \"</title>\\n\\n  <script type=\\\"text/javascript\\\">\\n  //<!--\\n  function toggle(id) {\\n    var pre  = document.getElementById(\\\"pre-\\\" + id);\\n    var post = document.getElementById(\\\"post-\\\" + id);\\n    var context = document.getElementById(\\\"context-\\\" + id);\\n\\n    if (pre.style.display == 'block') {\\n      pre.style.display = 'none';\\n      post.style.display = 'none';\\n      context.style.background = \\\"none\\\";\\n    } else {\\n      pre.style.display = 'block';\\n      post.style.display = 'block';\\n      context.style.background = \\\"#fffed9\\\";\\n    }\\n  }\\n\\n  function toggleBacktrace(){\\n    var bt = document.getElementById(\\\"backtrace\\\");\\n    var toggler = document.getElementById(\\\"expando\\\");\\n\\n    if (bt.className == 'condensed') {\\n      bt.className = 'expanded';\\n      toggler.innerHTML = \\\"(condense)\\\";\\n    } else {\\n      bt.className = 'condensed';\\n      toggler.innerHTML = \\\"(expand)\\\";\\n    }\\n  }\\n  //-->\\n  </script>\\n\\n<style type=\\\"text/css\\\" media=\\\"screen\\\">\\n  *                   {margin: 0; padding: 0; border: 0; outline: 0;}\\n  div.clear           {clear: both;}\\n  body                {background: #EEEEEE; margin: 0; padding: 0;\\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode',\\n                       'Garuda';}\\n  code                {font-family: 'Lucida Console', monospace;\\n                       font-size: 12px;}\\n  li                  {height: 18px;}\\n  ul                  {list-style: none; margin: 0; padding: 0;}\\n  ol:hover            {cursor: pointer;}\\n  ol li               {white-space: pre;}\\n  #explanation        {font-size: 12px; color: #666666;\\n                       margin: 20px 0 0 100px;}\\n/* WRAP */\\n  #wrap               {width: 1000px; background: #FFFFFF; margin: 0 auto;\\n                       padding: 30px 50px 20px 50px;\\n                       border-left: 1px solid #DDDDDD;\\n                       border-right: 1px solid #DDDDDD;}\\n/* HEADER */\\n  #header             {margin: 0 auto 25px auto;}\\n  #header img         {float: left;}\\n  #header #summary    {float: left; margin: 12px 0 0 20px; width:660px;\\n                       font-family: 'Lucida Grande', 'Lucida Sans Unicode';}\\n  h1                  {margin: 0; font-size: 36px; color: #981919;}\\n  h2                  {margin: 0; font-size: 22px; color: #333333;}\\n  #header ul          {margin: 0; font-size: 12px; color: #666666;}\\n  #header ul li strong{color: #444444;}\\n  #header ul li       {display: inline; padding: 0 10px;}\\n  #header ul li.first {padding-left: 0;}\\n  #header ul li.last  {border: 0; padding-right: 0;}\\n/* BODY */\\n  #backtrace,\\n  #get,\\n  #post,\\n  #cookies,\\n  #rack               {width: 980px; margin: 0 auto 10px auto;}\\n  p#nav               {float: right; font-size: 14px;}\\n/* BACKTRACE */\\n  a#expando           {float: left; padding-left: 5px; color: #666666;\\n                      font-size: 14px; text-decoration: none; cursor: pointer;}\\n  a#expando:hover     {text-decoration: underline;}\\n  h3                  {float: left; width: 100px; margin-bottom: 10px;\\n                       color: #981919; font-size: 14px; font-weight: bold;}\\n  #nav a              {color: #666666; text-decoration: none; padding: 0 5px;}\\n  #backtrace li.frame-info {background: #f7f7f7; padding-left: 10px;\\n                           font-size: 12px; color: #333333;}\\n  #backtrace ul       {list-style-position: outside; border: 1px solid #E9E9E9;\\n                       border-bottom: 0;}\\n  #backtrace ol       {width: 920px; margin-left: 50px;\\n                       font: 10px 'Lucida Console', monospace; color: #666666;}\\n  #backtrace ol li    {border: 0; border-left: 1px solid #E9E9E9;\\n                       padding: 2px 0;}\\n  #backtrace ol code  {font-size: 10px; color: #555555; padding-left: 5px;}\\n  #backtrace-ul li    {border-bottom: 1px solid #E9E9E9; height: auto;\\n                       padding: 3px 0;}\\n  #backtrace-ul .code {padding: 6px 0 4px 0;}\\n  #backtrace.condensed .system,\\n  #backtrace.condensed .framework {display:none;}\\n/* REQUEST DATA */\\n  p.no-data           {padding-top: 2px; font-size: 12px; color: #666666;}\\n  table.req           {width: 980px; text-align: left; font-size: 12px;\\n                       color: #666666; padding: 0; border-spacing: 0;\\n                       border: 1px solid #EEEEEE; border-bottom: 0;\\n                       border-left: 0;\\n                       clear:both}\\n  table.req tr th     {padding: 2px 10px; font-weight: bold;\\n                       background: #F7F7F7; border-bottom: 1px solid #EEEEEE;\\n                       border-left: 1px solid #EEEEEE;}\\n  table.req tr td     {padding: 2px 20px 2px 10px;\\n                       border-bottom: 1px solid #EEEEEE;\\n                       border-left: 1px solid #EEEEEE;}\\n/* HIDE PRE/POST CODE AT START */\\n  .pre-context,\\n  .post-context       {display: none;}\\n\\n  table td.code       {width:750px}\\n  table td.code div   {width:750px;overflow:hidden}\\n</style>\\n</head>\\n<body>\\n  <div id=\\\"wrap\\\">\\n    <div id=\\\"header\\\">\\n      <img src=\\\"/__sinatra__/500.png\\\" alt=\\\"application error\\\" height=\\\"161\\\" width=\\\"313\\\" />\\n      <div id=\\\"summary\\\">\\n        <h1><strong>\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n; _erbout.concat((h exception.class ).to_s); _erbout.concat \"</strong> at <strong>\"; _erbout.concat((h path ).to_s); _erbout.concat \"\\n          </strong></h1>\\n        <h2>\"\n\n; _erbout.concat((h exception.message ).to_s); _erbout.concat \"</h2>\\n        <ul>\\n          <li class=\\\"first\\\"><strong>file:</strong> <code>\\n            \"\n\n\n; _erbout.concat((h frames.first.filename.split(\"/\").last ).to_s); _erbout.concat \"</code></li>\\n          <li><strong>location:</strong> <code>\"\n; _erbout.concat((h frames.first.function ).to_s); _erbout.concat \"\\n            </code></li>\\n          <li class=\\\"last\\\"><strong>line:\\n            </strong> \"\n\n\n; _erbout.concat((h frames.first.lineno ).to_s); _erbout.concat \"</li>\\n        </ul>\\n      </div>\\n      <div class=\\\"clear\\\"></div>\\n    </div>\\n\\n    <div id=\\\"backtrace\\\" class='condensed'>\\n      <h3>BACKTRACE</h3>\\n      <p><a href=\\\"#\\\" id=\\\"expando\\\"\\n            onclick=\\\"toggleBacktrace(); return false\\\">(expand)</a></p>\\n      <p id=\\\"nav\\\"><strong>JUMP TO:</strong>\\n         <a href=\\\"#get-info\\\">GET</a>\\n         <a href=\\\"#post-info\\\">POST</a>\\n         <a href=\\\"#cookie-info\\\">COOKIES</a>\\n         <a href=\\\"#env-info\\\">ENV</a>\\n      </p>\\n      <div class=\\\"clear\\\"></div>\\n\\n      <ul id=\\\"backtrace-ul\\\">\\n\\n      \"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n;  id = 1 ; _erbout.concat \"\\n      \"\n;  frames.each do |frame| ; _erbout.concat \"\\n          \"\n;  if frame.context_line && frame.context_line != \"#\" ; _erbout.concat \"\\n\\n            <li class=\\\"frame-info \"\n\n; _erbout.concat(( frame_class(frame) ).to_s); _erbout.concat \"\\\">\\n              <code>\"\n; _erbout.concat((h frame.filename ).to_s); _erbout.concat \"</code> in\\n                <code><strong>\"\n; _erbout.concat((h frame.function ).to_s); _erbout.concat \"</strong></code>\\n            </li>\\n\\n            <li class=\\\"code \"\n\n\n; _erbout.concat(( frame_class(frame) ).to_s); _erbout.concat \"\\\">\\n              \"\n;  if frame.pre_context ; _erbout.concat \"\\n              <ol start=\\\"\"\n; _erbout.concat((h frame.pre_context_lineno + 1 ).to_s); _erbout.concat \"\\\"\\n                  class=\\\"pre-context\\\" id=\\\"pre-\"\n; _erbout.concat(( id ).to_s); _erbout.concat \"\\\"\\n                  onclick=\\\"toggle(\"\n; _erbout.concat(( id ).to_s); _erbout.concat \");\\\">\\n                \"\n;  frame.pre_context.each do |line| ; _erbout.concat \"\\n                <li class=\\\"pre-context-line\\\"><code>\"\n; _erbout.concat((h line ).to_s); _erbout.concat \"</code></li>\\n                \"\n;  end ; _erbout.concat \"\\n              </ol>\\n              \"\n\n;  end ; _erbout.concat \"\\n\\n              <ol start=\\\"\"\n\n; _erbout.concat(( frame.lineno ).to_s); _erbout.concat \"\\\" class=\\\"context\\\" id=\\\"\"; _erbout.concat(( id ).to_s); _erbout.concat \"\\\"\\n                  onclick=\\\"toggle(\"\n; _erbout.concat(( id ).to_s); _erbout.concat \");\\\">\\n                <li class=\\\"context-line\\\" id=\\\"context-\"\n; _erbout.concat(( id ).to_s); _erbout.concat \"\\\"><code>\"; _erbout.concat((\n                  h frame.context_line ).to_s); _erbout.concat \"</code></li>\\n              </ol>\\n\\n              \"\n\n\n;  if frame.post_context ; _erbout.concat \"\\n              <ol start=\\\"\"\n; _erbout.concat((h frame.lineno + 1 ).to_s); _erbout.concat \"\\\" class=\\\"post-context\\\"\\n                  id=\\\"post-\"\n; _erbout.concat(( id ).to_s); _erbout.concat \"\\\" onclick=\\\"toggle(\"; _erbout.concat(( id ).to_s); _erbout.concat \");\\\">\\n                \"\n;  frame.post_context.each do |line| ; _erbout.concat \"\\n                <li class=\\\"post-context-line\\\"><code>\"\n; _erbout.concat((h line ).to_s); _erbout.concat \"</code></li>\\n                \"\n;  end ; _erbout.concat \"\\n              </ol>\\n              \"\n\n;  end ; _erbout.concat \"\\n              <div class=\\\"clear\\\"></div>\\n            </li>\\n\\n          \"\n\n\n\n;  end ; _erbout.concat \"\\n\\n        \"\n\n;  id += 1 ; _erbout.concat \"\\n      \"\n;  end ; _erbout.concat \"\\n\\n      </ul>\\n    </div> <!-- /BACKTRACE -->\\n\\n    <div id=\\\"get\\\">\\n      <h3 id=\\\"get-info\\\">GET</h3>\\n      \"\n\n\n\n\n\n\n;  unless req.GET.empty? ; _erbout.concat \"\\n        <table class=\\\"req\\\">\\n          <tr>\\n            <th>Variable</th>\\n            <th>Value</th>\\n          </tr>\\n           \"\n\n\n\n\n\n;  req.GET.sort_by { |k, v| k.to_s }.each { |key, val| ; _erbout.concat \"\\n          <tr>\\n            <td>\"\n\n; _erbout.concat((h key ).to_s); _erbout.concat \"</td>\\n            <td class=\\\"code\\\"><div>\"\n; _erbout.concat((h val.inspect ).to_s); _erbout.concat \"</div></td>\\n          </tr>\\n          \"\n\n;  } ; _erbout.concat \"\\n        </table>\\n      \"\n\n;  else ; _erbout.concat \"\\n        <p class=\\\"no-data\\\">No GET data.</p>\\n      \"\n\n;  end ; _erbout.concat \"\\n      <div class=\\\"clear\\\"></div>\\n    </div> <!-- /GET -->\\n\\n    <div id=\\\"post\\\">\\n      <h3 id=\\\"post-info\\\">POST</h3>\\n      \"\n\n\n\n\n\n;  unless req.POST.empty? ; _erbout.concat \"\\n        <table class=\\\"req\\\">\\n          <tr>\\n            <th>Variable</th>\\n            <th>Value</th>\\n          </tr>\\n          \"\n\n\n\n\n\n;  req.POST.sort_by { |k, v| k.to_s }.each { |key, val| ; _erbout.concat \"\\n          <tr>\\n            <td>\"\n\n; _erbout.concat((h key ).to_s); _erbout.concat \"</td>\\n            <td class=\\\"code\\\"><div>\"\n; _erbout.concat((h val.inspect ).to_s); _erbout.concat \"</div></td>\\n          </tr>\\n          \"\n\n;  } ; _erbout.concat \"\\n        </table>\\n      \"\n\n;  else ; _erbout.concat \"\\n        <p class=\\\"no-data\\\">No POST data.</p>\\n      \"\n\n;  end ; _erbout.concat \"\\n      <div class=\\\"clear\\\"></div>\\n    </div> <!-- /POST -->\\n\\n    <div id=\\\"cookies\\\">\\n      <h3 id=\\\"cookie-info\\\">COOKIES</h3>\\n      \"\n\n\n\n\n\n;  unless req.cookies.empty? ; _erbout.concat \"\\n        <table class=\\\"req\\\">\\n          <tr>\\n            <th>Variable</th>\\n            <th>Value</th>\\n          </tr>\\n          \"\n\n\n\n\n\n;  req.cookies.each { |key, val| ; _erbout.concat \"\\n            <tr>\\n              <td>\"\n\n; _erbout.concat((h key ).to_s); _erbout.concat \"</td>\\n              <td class=\\\"code\\\"><div>\"\n; _erbout.concat((h val.inspect ).to_s); _erbout.concat \"</div></td>\\n            </tr>\\n          \"\n\n;  } ; _erbout.concat \"\\n        </table>\\n      \"\n\n;  else ; _erbout.concat \"\\n        <p class=\\\"no-data\\\">No cookie data.</p>\\n      \"\n\n;  end ; _erbout.concat \"\\n      <div class=\\\"clear\\\"></div>\\n    </div> <!-- /COOKIES -->\\n\\n    <div id=\\\"rack\\\">\\n      <h3 id=\\\"env-info\\\">Rack ENV</h3>\\n      <table class=\\\"req\\\">\\n        <tr>\\n          <th>Variable</th>\\n          <th>Value</th>\\n        </tr>\\n         \"\n\n\n\n\n\n\n\n\n\n\n;  env.sort_by { |k, v| k.to_s }.each { |key, val| ; _erbout.concat \"\\n         <tr>\\n           <td>\"\n\n; _erbout.concat((h key ).to_s); _erbout.concat \"</td>\\n           <td class=\\\"code\\\"><div>\"\n; _erbout.concat((h val ).to_s); _erbout.concat \"</div></td>\\n         </tr>\\n         \"\n\n;  } ; _erbout.concat \"\\n      </table>\\n      <div class=\\\"clear\\\"></div>\\n    </div> <!-- /RACK ENV -->\\n\\n    <p id=\\\"explanation\\\">You're seeing this error because you have\\nenabled the <code>show_exceptions</code> setting.</p>\\n  </div> <!-- /WRAP -->\\n  </body>\\n</html>\\n\"\n\n\n\n\n\n\n\n\n\n; _erbout">, @app=#<Authentication:0x1068e6ed8 @app=#<Resque::Server:0x1068e7180 @template_cache=#<Tilt::Cache:0x1068e7130 @cache={}>, @app=nil>>>}
                      creditcards_new GET    /service/creditcards/new(.:format)                                          {:controller=>"store/creditcards", :action=>"new"}
                               jammit        /assets/:package.:extension(.:format)                                       {:extension=>/.+/, :controller=>"jammit", :action=>"package"}
                         zz_api_login POST   /zz_api/login(.:format)                                                     {:controller=>"user_sessions", :format=>"json", :action=>"zz_api_create"}
                        zz_api_logout        /zz_api/logout(.:format)                                                    {:controller=>"user_sessions", :format=>"json", :action=>"zz_api_destroy"}
                        zz_api_albums GET    /zz_api/users/:user_id/albums(.:format)                                     {:controller=>"albums", :format=>"json", :action=>"zz_api_albums"}
                zz_api_my_albums_json GET    /zz_api/users/:user_id/my_albums_json(.:format)                             {:controller=>"albums", :format=>"json", :action=>"zz_api_my_albums_json"}
         zz_api_my_albums_public_json GET    /zz_api/users/:user_id/my_albums_public_json(.:format)                      {:controller=>"albums", :format=>"json", :action=>"zz_api_my_albums_public_json"}
             zz_api_liked_albums_json GET    /zz_api/users/:user_id/liked_albums_json(.:format)                          {:controller=>"albums", :format=>"json", :action=>"zz_api_liked_albums_json"}
      zz_api_liked_albums_public_json GET    /zz_api/users/:user_id/liked_albums_public_json(.:format)                   {:controller=>"albums", :format=>"json", :action=>"zz_api_liked_albums_public_json"}
zz_api_liked_users_public_albums_json GET    /zz_api/users/:user_id/liked_users_public_albums_json(.:format)             {:controller=>"albums", :format=>"json", :action=>"zz_api_liked_users_public_albums_json"}
           zz_api_invited_albums_json GET    /zz_api/users/:user_id/invited_albums_json(.:format)                        {:controller=>"albums", :format=>"json", :action=>"zz_api_invited_albums_json"}
             zz_api_album_photos_json GET    /zz_api/albums/:album_id/photos_json(.:format)                              {:controller=>"photos", :format=>"json", :action=>"zz_api_photos_json"}
                     zz_api_user_info GET    /zz_api/users/:user_id/info(.:format)                                       {:controller=>"users", :format=>"json", :action=>"zz_api_user_info"}
                           identities GET    /zz_api/identities(.:format)                                                {:controller=>"identities", :format=>"json", :action=>"zz_api_identities"}
                                      GET    /zz_api/identities/:service_name(.:format)                                  {:controller=>"identities", :format=>"json", :action=>"zz_api_identity"}
                            edit_user GET    /:username/settings(.:format)                                               {:controller=>"users", :action=>"edit"}
                   edit_user_password GET    /:username/change_password(.:format)                                        {:controller=>"users", :action=>"edit_password"}
                                 user GET    /:user_id(.:format)                                                         {:controller=>"albums", :action=>"index"}
                      user_activities GET    /:user_id/activities(.:format)                                              {:controller=>"activities", :action=>"user_index"}
                          user_people GET    /:user_id/people(.:format)                                                  {:controller=>"people", :action=>"user_index"}
                                      GET    /:user_id/:album_id(.:format)                                               {:controller=>"photos", :action=>"index"}
                                      GET    /:user_id/:album_id/photos(.:format)                                        {:controller=>"photos", :action=>"index"}
                                      GET    /:user_id/:album_id/people(.:format)                                        {:controller=>"people", :action=>"album_index"}
                                      GET    /:user_id/:album_id/activities(.:format)                                    {:controller=>"activities", :action=>"album_index"}
                                      GET    /:user_id/:album_id/movie(.:format)                                         {:controller=>"photos", :action=>"movie"}
                                      GET    /:user_id/:album_id/photos/:photo_id(.:format)                              {:controller=>"photos", :action=>"show"}
                               jammit        /assets/:package.:extension(.:format)                                       {:extension=>/.+/, :controller=>"jammit", :action=>"package"}
