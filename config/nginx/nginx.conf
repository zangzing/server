# This is the top level nginx.conf file - it is generated by chef scripts so
# if you need to make changes you need to make then in the chef template and
# redeploy.  For creation of local dev files you can do so by running the following
# command from your zz-chef-repo directory
#
# ./generate_local.sh
#
# To run a debug session start as:
#
# ./generate_local_debug.sh
#
# and set up your ide to run against that session
#
# c7

daemon off;
user root ec2-user;
worker_processes 4;
pid /var/run/nginx.pid;

events {
  worker_connections 8192;
  #use epoll;
}


http {

    types {
        text/html                             html htm shtml;
        text/css                              css;
        text/xml                              xml rss;
        image/gif                             gif;
        image/jpeg                            jpeg jpg;
        application/x-javascript              js;
        application/atom+xml                  atom;

        text/mathml                           mml;
        text/plain                            txt;
        text/vnd.sun.j2me.app-descriptor      jad;
        text/vnd.wap.wml                      wml;
        text/x-component                      htc;

        image/png                             png;
        image/tiff                            tif tiff;
        image/vnd.wap.wbmp                    wbmp;
        image/x-icon                          ico;
        image/x-jng                           jng;
        image/x-ms-bmp                        bmp;
        image/svg+xml                         svg;

        application/java-archive              jar war ear;
        application/mac-binhex40              hqx;
        application/msword                    doc;
        application/pdf                       pdf;
        application/postscript                ps eps ai;
        application/rtf                       rtf;
        application/vnd.ms-excel              xls;
        application/vnd.ms-powerpoint         ppt;
        application/vnd.wap.wmlc              wmlc;
        application/vnd.wap.xhtml+xml         xhtml;
        application/x-cocoa                   cco;
        application/x-java-archive-diff       jardiff;
        application/x-java-jnlp-file          jnlp;
        application/x-makeself                run;
        application/x-perl                    pl pm;
        application/x-pilot                   prc pdb;
        application/x-rar-compressed          rar;
        application/x-redhat-package-manager  rpm;
        application/x-sea                     sea;
        application/x-shockwave-flash         swf;
        application/x-stuffit                 sit;
        application/x-tcl                     tcl tk;
        application/x-x509-ca-cert            der pem crt;
        application/x-xpinstall               xpi;
        application/zip                       zip;

        application/octet-stream              bin exe dll;
        application/octet-stream              deb;
        application/octet-stream              dmg;
        application/octet-stream              eot;
        application/octet-stream              iso img;
        application/octet-stream              msi msp msm;

        audio/midi                            mid midi kar;
        audio/mpeg                            mp3;
        audio/x-realaudio                     ra;

        video/3gpp                            3gpp 3gp;
        video/mpeg                            mpeg mpg;
        video/quicktime                       mov;
        video/x-flv                           flv;
        video/x-mng                           mng;
        video/x-ms-asf                        asx asf;
        video/x-ms-wmv                        wmv;
        video/x-msvideo                       avi;
    }

    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile on;

    tcp_nopush        on;

    server_names_hash_bucket_size  128;

    gzip              on;
    gzip_http_version 1.0;
    gzip_comp_level   3;
    gzip_static       on;
    gzip_proxied      any;
    gzip_buffers      16 8k;
    gzip_types        text/plain text/html text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    # gzip_disable      "MSIE [1-6]\.(?!.*SV1)";

# use the following to get the real ip value when
# behind load Amazon ELB
set_real_ip_from 10.0.0.0/8;
real_ip_header X-Forwarded-For;

##### Blocked addresses #####
    geo $remote_addr $blocked_ip {
        222.186.26.208/32   1;
        222.186.24.27/32    1;
        222.186.24.25/32    1;
        117.41.184.8/32     1;
        219.133.62.73/32    1;
        79.114.117.245/32   1;
        203.131.229.187/32  1;
        218.241.198.2/32    1;
        211.115.234.144/32  1;

        # mastereros27 latest ip
        85.48.40.67/32      1;
    }
#####

    #
    # set up the proxy directories and initial settings so that we can use it in the location handlers
    #
    # the size after key_zones=zz_cache:100m represents the amount of space needed in shared memory for the keys.  Keys are 128 bytes
    # each for a 64bit system so 80m would give us room for about 624k individual items.  max_size is the maximum size of the cache
    # on disk and inactive is the amount of time before non touched items are flushed - currently set to 90 days
    #
    # This file must be included from within the http level directive in nginx since it is only valid
    # to set up the cache paths at that level
    #
    proxy_cache_path  /data/tmp/nginx/cache levels=1 keys_zone=zz_cache:80m max_size=100G inactive=90d;
    proxy_temp_path /data/tmp/nginx/tmp_files;


    # custom upstream for this server
    upstream zangzing_upstream {
        server localhost:3001;
    }

    # lets us pretend to serve assets from another server
    # rails port + 1
    server {
        listen 3002;
        server_name localhost;

        root public;

        access_log log/nginx-asset.access.log main;
        error_log  log/nginx-asset.error.log notice;

        # serve up anything in our doc root
        location / {
            expires 1y;
        }
    }

    root public;

    access_log log/nginx-access.log main;
    error_log  log/nginx-error.log notice;
    # error_log /dev/null notice;

    #
    # provide a very long timeout
    # for development so we can sit
    # in the debugger without dropping connections
    #
    proxy_read_timeout 7200s;


    # standard server for rails app
    server {
        listen 80 default;
        server_name localhost;

        include nginx-shared-server.conf;
    }

    # ssl server
    server {
        listen 443;
        server_name localhost;

        ssl on;
        ssl_certificate         localhost.crt;
        ssl_certificate_key     localhost.key;

        include nginx-shared-server.conf;
    }


}

